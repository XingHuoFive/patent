// gradle构建的时候执行,buildscript中的声明是gradle脚本自身需要使用的资源 。 可以声明的资源包括依赖项 、 第三方插件 、 maven仓库地址等
buildscript {
    // 定义变量
    ext {
        springBootVersion = '1.5.9.RELEASE'
        ALI_REPOSITORY_URL = 'http://maven.aliyun.com/nexus/content/groups/public'
        REPOSITORY_URL = 'http://172.16.60.188:8081/nexus/content/groups/public'
    }
    // 仓库地址
    repositories {
        // 先从阿里云maven仓库中去下载，没有再去maven中央仓库
        maven {
            url ALI_REPOSITORY_URL
        }
        maven {
            url REPOSITORY_URL
        }
        mavenCentral()

    }
    // 构建时所需要的插件或者是其他的依赖
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

}

// 所有模块的总仓库地址
allprojects {
    // 在build.gradle文件中直接声明的依赖项、仓库地址等信息是项目自身需要的资源。
    repositories {
        maven {
            url ALI_REPOSITORY_URL
        }
        maven {
            url REPOSITORY_URL
        }
    }
}

subprojects {

    apply plugin: 'war'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'

    apply plugin: 'application'
    mainClassName = 'com.sxf.StuManageSystemApplication'
    jar {
        manifest {
            attributes 'Main-Class': 'com.sxf.StuManageSystemApplication'
        }
        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
    group 'com.sxf'
    group 'com.sxf'
    version '1.0-SNAPSHOT'
    sourceCompatibility = 1.8

    dependencies {
        testCompile('org.springframework.boot:spring-boot-starter-test')
        compile 'org.springframework.boot:spring-boot-starter-web:2.0.4.RELEASE'
        compile 'org.hibernate:hibernate-validator:5.3.6.Final'
        compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0'
        compile('org.apache.httpcomponents:httpclient:4.5.2')
        compile('org.apache.httpcomponents:httpmime:4.5.2')
        compile 'mysql:mysql-connector-java:5.1.37'
        compile 'junit:junit:4.12'
       compile('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

//        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        compileOnly("org.springframework.boot:spring-boot-configuration-processor")
  //       annotationProcessor("org.projectlombok:lombok")
            compileOnly("org.projectlombok:lombok")


// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
        compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
        compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'


// https://mvnrepository.com/artifact/commons-net/commons-net
        compile group: 'commons-net', name: 'commons-net', version: '3.6'

// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.2.0.RELEASE'
        compile("org.springframework.boot:spring-boot-starter-data-redis:1.5.8.RELEASE")
        compile group: 'com.alibaba', name: 'fastjson', version: '1.2.58'



    }


}

